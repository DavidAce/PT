//
// Created by david on 22/1/18.
//


sim::T_min                      = 0.1                        /*!< Minimum temperature of the simulation */
sim::T_max                      = 6                          /*!< Maximum temperature of the simulation */
sim::MCS_warmup                 = 20000                      /*!< Number of warmup Monte Carlo Sweeps (MCS) */
sim::MCS_sample                 = 60000                      /*!< Number of sampling Monte Carlo Sweeps (MCS) */
sim::job_name                   = ""                         /*!< Name or identifier for the current job   */

model::on                       = true                       /*!< Turns Ising simulation on/off. */
model::J1                       = 1                          /*!< Nearest neighbor (Ferromagnetic) coupling */
model::J2                       = 0                          /*!< (NOT IMPLEMENTED) Next nearest neighbor coupling */
model::J3                       = 0                          /*!< (NOT IMPLEMENTED) Third nearest neighbor coupling */
model::L                        = 12                         /*!< Linear lattice size */
model::N                        = model::L*model::L          /*!< Number of lattice points */
model::model_name               = ""                         /*!< Name or identifier for the current model */


//Rates for checking, sample, storing and printing (MCS units)
rate::samp                      = 1                          /*!< How often to measure, or sample  */
rate::save                      = 1000                       /*!< How often to save all samplings and write timeseries to file */
rate::comp                      = 10000                      /*!< How often to compute full statistics from entire sampling period */
rate::swap                      = 50                         /*!< How often to swap walkers in adjacent windows */
rate::cout                      = 1000                       /*!< How often to cout in terminal */
rate::move                      = 5000                       /*!< How often to move temperatures during warmup */
rate::sync                      = 100                        /*!< How often to sync groundstates during warmup (to find the lowest energy states) */

//Number of calc_thermo cycles for error calculation
bootstrap::reps                 = 100                        /*!< Number of calc_thermo cycles for error calculation */



//Parameters for saving data to hdf5
hdf5::save_to_file              = true                       /*!< If true, saves the simulation data to an HDF5 file instead of just outputting to console */
hdf5::create_dir_if_not_found   = true                       /*!< If true, an output directory will be created in the project root folder if it isn't found */
hdf5::overwrite_file_if_found   = false                      /*!< If true, an hdf5-file with the provided filename will be overwritten if found in output_folder */
hdf5::output_filename           = data.h5                    /*!< Name of the output HDF5 file */
hdf5::output_folder             = output                     /*!< Path of the output HDF5 file */
hdf5::full_storage              = false                      /*!< (Not implemented yet) If true, saves more simulation data to file (such as explicit form of MPS). Set to false to reduce output file size. */

//Parameters to control profiling.
profiling::on                   = true                       /*!< If true, turns on profiling and timings will be shown on console. */
profiling::precision            = 5                          /*!< Sets precision (number of decimals) of time output. */

//Console settings
console::verbosity              = 0                          /*!< Level of verbosity desired [0-2]. Level 0 prints almost nothing, level 2 prints everything */
console::timestamp              = false                      /*!< Whether to put a timestamp on console outputs */

